blogdown:::serve_site()
blogdown:::serve_site()
remotes::install_github('rstudio/blogdown')
library(blogdown)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
hugo server
blogdown:::serve_site()
blogdown:::serve_site()
knit_with_parameters('~/GitHub/trainR2022/content/en/get_ready/FirstSteps/2019-02-20-r-objects.Rmarkdown')
unlink('content/en/get_ready/FirstSteps/2019-02-20-r-objects_cache', recursive = TRUE)
?rmarkdown::render
library(tidyverse)
#load packages
library(data.table)
library(gapminder)
library(knitr)
gapminder
library(data.table)  #load the package
DT <- data.table(gapminder) #transform as a data.table object and renamed DT
DT$row_id <- 1:nrow(DT)
DT
DT[1:2]
DT[1:4, ]
DT[c(1, 3, 5), ]
# create a sequence of odd numbers
oddrows <- seq(from= 1, to = nrow(DT) , by=2)
# use oddrows to select the right rows
DT[oddrows, ]
DT[-(1:30), ]  #eliminates the first 30 rows
set.seed(1234567)   # the seed is used to make sure we have the same sample selection
randomsample <- sample(1:nrow(DT), 5, replace=FALSE)
DT[randomsample, ]
# First 10 rows
subDT <- DT[1:10, ]
# Random sample with replacement
subDT[sample(1:nrow(subDT), 20, replace = TRUE)]
DT[country == "South Africa",]
DT[country == "South Africa" & year > 1995, ]
setkey(DT, country)
DT
DT["South Africa"]
DT[c( "Zimbabwe", "Mozambique")]
setkey(DT, year, country)
DT
DT[list(2002, "Mozambique")]
DT[.(2002, "Mozambique")]
setkey(DT, year, country)
DT[.(2002)]
DT[.(c(1997,2002))]
DT[.(unique(year), "South Africa")]
DT[.(c(1997,2000), "South Africa")]
DT[.(c(1997,2000), "South Africa"), nomatch = FALSE]
setkey(DT, "country")
key(DT)
setkey(DT, "country", "year")
key(DT)
setkey(DT, NULL)
key(DT)
setindex(DT, country)
head(DT)
indices(DT)
str(DT)
DT[country =="Zimbabwe", ]
indices(DT)
library(gapminder)
gapminder
? slice_sample()
library(gapminder)
library(tidyverse)
data <- gapminder
data$row_no = 1:nrow(data)
slice(data, 2:5)  # to select the row from 2 to 5
slice(data, c(7, 5, 1)) # to select specific rows in a specific order
slice(data, 10) #note that including a number and not a vector also works
data %>% slice(2:5)
# note that it outputs a new dataframe, however you can check that the initial data
# was not modified, and that you did not create a new object in the workspace
data %>% slice_tail(n=10)
# if you want to save it with a new name
data2 <- data %>% slice_tail(n=10)
data %>% slice(c(3,50, 200))
data %>% slice_sample(n = 5)
data %>% slice_sample(n = 5, replace = TRUE)
data10 <- data %>% slice_head(n=10)
data10 %>% slice_sample(n = 20, replace = TRUE)
SAdat <- filter(data, country=="South Africa")
head(SAdat)  #the function head selects the first 6 rows of a data frame
SA2000 <- filter(data, country=="South Africa" , year > 2000)
head(SA2000,3)
filter(data, country=="South Africa" , year > 2001)
filter(data, continent=="Africa" , year > 2001)
filter(data, continent=="Africa" , year > 2003)
filter(data, continent=="Africa" , year > 2003, pop > 10000000)
filter(data, continent=="Africa" , year > 2003, pop > 20000000)
filter(data, continent=="Africa" , year > 2003, pop > 30000000)
1.96^2 *(0.5)*0.95
1.96^2 *(0.5)*0.95 /(0.06^2)
dnorm(x = 0.05)
pnorm(x = 0.05)
pnorm(q = 0.05)
? pnorm
pnorm(q = 0.95)
qnorm(p = 0.95)
qnorm(p = 0.975)
1.9599^2 *(0.5)*0.95 /(0.06^2)
1.96^2 *(0.5)*0.95 /(0.06^2)
qnorm(p = 0.9805)
2.064^2 *(0.5)*0.95 /(0.06^2)
1-0.99
(1-0.99)/2
qnorm(1-0.005)
qnorm(1-0.005)^2 *(0.5)*0.95 /(0.06^2)
qnorm(1-0.005)^2 *(0.5)*0.95 /(0.1^2)
qnorm(1-0.005)^2 *(0.5)*0.95 /(0.07^2)
tnorm(1-0.005)^2 *(0.5)*0.95 /(0.07^2)
znorm(1-0.005)^2 *(0.5)*0.95 /(0.07^2)
qt(1-0.005)^2 *(0.5)*0.95 /(0.07^2)
qt(1-0.005, 30)^2 *(0.5)*0.95 /(0.07^2)
qt(1-0.005, 30)^2 *(0.5)*0.95 /(0.07^2)
qt(1-0.005, 30)
qz(1-0.005, 30)^2 *(0.5)*0.95 /(0.07^2)
qZ(1-0.005, 30)^2 *(0.5)*0.95 /(0.07^2)
qt(1-0.005, 40)^2 *(0.5)*0.95 /(0.07^2)
qnorm(1-0.005)^2 *(0.5)*0.95 /(0.08^2)
library(gapminder)
library(tidyverse)
data <- gapminder
data$row_no = 1:nrow(data)
slice(data, 2:5)  # to select the row from 2 to 5
slice(data, c(7, 5, 1)) # to select specific rows in a specific order
slice(data, 10) #note that including a number and not a vector also works
data %>% slice(2:5)
# note that it outputs a new dataframe, however you can check that the initial data
# was not modified, and that you did not create a new object in the workspace
data %>% slice_tail(n=10)
# if you want to save it with a new name
data2 <- data %>% slice_tail(n=10)
data %>% slice(c(3,50, 200))
data %>% slice_sample(n = 5)
data %>% slice_sample(n = 5, replace = TRUE)
data10 <- data %>% slice_head(n=10)
data10 %>% slice_sample(n = 20, replace = TRUE)
SAdat <- filter(data, country=="South Africa")
head(SAdat)  #the function head selects the first 6 rows of a data frame
SA2000 <- filter(data, country=="South Africa" & year > 2000)
head(SA2000,3)
filter(data, continent=="Africa" , year > 2003, pop > 30000000)
data
data <- slice(!2:3)
? slice
slice(data, 200:n())
slice(data, 200:n()) %>% head(10)
filter(data, country=="South Africa" & !(year = 2003))
filter(data, country=="South Africa" & !(year == 2003))
filter(data, country=="South Africa" & !(year %in% c(1962, 1977, 2003))
filter(data, country=="South Africa" & !(year %in% c(1962, 1977, 2003)))
data %>%
filter(continent == Africa, year ==2007) %>%
arrange(-GDP)
library(gapminder)
data <- gapminder
data$id <- 1:nrow(data)
data %>% arrange(country) %>% head(10)
data %>% arrange(continent, country, year) %>% head()
data %>% arrange(desc(continent), country) %>% head()
data %>%
filter(continent == Africa, year ==2007) %>%
arrange(-GDP)
View(data)
data %>%
filter(continent == Africa, year ==2007) %>%
arrange(-gdpPercap)
data %>%
filter(continent == "Africa", year ==2007) %>%
arrange(-gdpPercap)
data %>%
filter(continent == "Africa", year ==2007) %>%
arrange(-gdpPercap) %>%
slice_head(n=15)
data %>%
filter(continent == "Africa", year ==2007) %>%
arrange(-gdpPercap) %>%
slice_head(n=5)
data %>%
filter(continent == "Africa", year ==2007) %>%
arrange(-gdpPercap) %>%
slice_head(n=6)
data %>% select(country, year, gdpPercap) %>% slice_head(n=3)
data %>% select(country, year, gdpPercap) %>% slice_head(n=3)
data %>% select(1, 3, 2)
data %>% select(1, 3, 2)
View(data)
# This will select of the variables between the column continent and pop
data %>% select(continent:pop) %>% head(4)
# This will select of the variables between the column continent and pop
data %>% select(continent:pop) %>% head(4)
# This will exclude the variable Petal.Width
data %>% select(-gdpPercap)
# This will exclude the variable Petal.Width
data %>% select(-gdpPercap) %>% head(4)
# will select only the numeric variables
data %>% select(where(is.numeric))
# will select only the numeric variables
data %>% select(where(is.numeric)) %>% head(5)
# Select of the variables with names starting with P, and the variable ID
data %>% select(starts_with("c"), ID)
# Select of the variables with names starting with P, and the variable ID
data %>% select(starts_with("c"), id)
# Select of the variables with names starting with C
data %>% select(starts_with("c"))
# Select of the variables with names containing t
data %>% select(contains("t"))
# Select of the variables with names containing O
data %>% select(contains("O"))
? num_range
data %>% select(row_no, contains("0"))
data %>% select(row_no, contains("O"))
data %>% select(row_no)
View(data)
library(gapminder)
data <- gapminder
data$row_no <- 1:nrow(data)
data %>% arrange(country) %>% head(10)
data %>% arrange(continent, country, year) %>% head()
data %>% arrange(desc(continent), country) %>% head()
data %>%
filter(continent == "Africa", year ==2007) %>%
arrange(-gdpPercap) %>%
slice_head(n=6)
data %>% select(1, 3, 6)
data %>% select(country, year, gdpPercap) %>% slice_head(n=4)
# This will select of the variables between the column continent and pop
data %>% select(continent:pop) %>% head(4)
data %>% select(-gdpPercap) %>% head(4)
# will select only the numeric variables
data %>% select(where(is.numeric)) %>% head(5)
# Select of the variables with names starting with C
data %>% select(starts_with("c"))
# Select of the variables with names containing O
data %>% select(contains("O"))
data %>% select(row_no)
data %>% select(row_no, contains("o"))
data %>% select(row_no, year, contains("o"))
data %>% select(row_no, year, contains("o")) %>% head(5)
# this will make the row_no variable as the first colum
data %>% relocate(row_no) %>% head(3)
library(gapminder)
data <- gapminder
data$row_no <- 1:nrow(data)
data %>% arrange(country) %>% head(10)
data %>% arrange(continent, country, year) %>% head()
data %>% arrange(desc(continent), country) %>% head()
data %>%
filter(continent == "Africa", year ==2007) %>%
arrange(-gdpPercap) %>%
slice_head(n=6)
data %>% select(1, 3, 6)
data %>% select(country, year, gdpPercap) %>% slice_head(n=4)
# This will select of the variables between the column continent and pop
data %>% select(continent:pop) %>% head(4)
data %>% select(-gdpPercap) %>% head(4)
# will select only the numeric variables
data %>% select(where(is.numeric)) %>% head(5)
# Select of the variables with names starting with C
data %>% select(starts_with("c"))
# Select of the variables with names containing O
data %>% select(contains("O"))
data %>% select(row_no, year, contains("o")) %>% head(5)
# this will make the row_no variable as the first colum
data %>% relocate(row_no) %>% head(3)
data %>% filter(continent == "Africa") %>%
select(country, pop)
library(gapminder)
library(tidyverse)
data <- gapminder
data$row_no <- 1:nrow(data)
data %>% arrange(country) %>% head(10)
data %>% arrange(continent, country, year) %>% head()
data %>% arrange(desc(continent), country) %>% head()
data %>%
filter(continent == "Africa", year ==2007) %>%
arrange(-gdpPercap) %>%
slice_head(n=6)
data %>% select(1, 3, 6)
data %>% select(country, year, gdpPercap) %>% slice_head(n=4)
# This will select of the variables between the column continent and pop
data %>% select(continent:pop) %>% head(4)
data %>% select(-gdpPercap) %>% head(4)
# will select only the numeric variables
data %>% select(where(is.numeric)) %>% head(5)
# Select of the variables with names starting with C
data %>% select(starts_with("c"))
# Select of the variables with names containing O
data %>% select(contains("O"))
data %>% select(row_no, year, contains("o")) %>% head(5)
# this will make the row_no variable as the first colum
data %>% relocate(row_no) %>% head(3)
data %>% filter(continent == "Africa") %>%
select(country, pop)
