data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
set.seed(123)
gapminder %>% select(country) %>% unique()
country_names
country_names <- gapminder %>% select(country) %>% unique() %>% sample(n=10)
country_names <- gapminder %>% select(country) %>% unique() %>% sample(., n=10)
set.seed(123)
country_names <- gapminder %>% select(country) %>% unique() %>% sample(10)
set.seed(123)
country_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
country_names
set.seed(123)
country_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
country_names <- sample(unique(data$country), 10)
country_names
country_codes
? country_codes
set.seed(123)
country_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
country_names <- sample(unique(data$country), 10)
country_names
set.seed(123)
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
random_names <- sample(unique(data$country), 10)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country=random_names) %>% arrange(country)
data
library(tidyverse)
set.seed(12345)
N <- 6
d <- tibble(resp_id=rep(1:N),
name = sample(c("John", "Mary", "Mosis", "Steven"), N, TRUE),
age = sample(30:50, N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
ans_1=sample(3,N,TRUE),
ans_2=sample(3,N,TRUE),
ans_3=sample(2,N,TRUE))
dt <- pivot_longer(d, cols=contains("ans"),
names_prefix = "ans_", names_to = "question", values_to = "answer")
questions <- dt %>% select(resp_id, question, answer) %>% filter((resp_id != 4 | question!=2) & resp_id != 5)
questions <- questions %>% add_row(resp_id=7, question="1", answer=2)
demog <- dt %>% select(resp_id, name, age, city) %>% distinct()
demog
questions
demog %>% inner_join(questions, by = "resp_id")
demog %>% left_join(questions, by = "resp_id")
demog %>% full_join(questions, by = "resp_id")
set.seed(123)
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
random_names <- sample(unique(data$country), 10)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country=random_names) %>% arrange(country)
data
library(tidyverse)
set.seed(12345)
N <- 6
d <- tibble(resp_id=rep(1:N),
name = sample(c("John", "Mary", "Mosis", "Steven"), N, TRUE),
age = sample(30:50, N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
ans_1=sample(3,N,TRUE),
ans_2=sample(3,N,TRUE),
ans_3=sample(2,N,TRUE))
dt <- pivot_longer(d, cols=contains("ans"),
names_prefix = "ans_", names_to = "question", values_to = "answer")
questions <- dt %>% select(resp_id, question, answer) %>% filter((resp_id != 4 | question!=2) & resp_id != 5)
questions <- questions %>% add_row(resp_id=7, question="1", answer=2)
demog <- dt %>% select(resp_id, name, age, city) %>% distinct()
demog
questions
demog %>% inner_join(questions, by = "resp_id")
demog %>% left_join(questions, by = "resp_id")
demog %>% full_join(questions, by = "resp_id")
set.seed(123)
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
random_names <- sample(unique(data$country), 10)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country==random_names) %>% arrange(country)
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country %in% random_names) %>% arrange(country)
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
random_names <- sample(unique(data$country), 10)
random_names
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10)
random_names
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country %in% random_names) %>% arrange(country)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
filter(country %in% random_names) %>% arrange(country)
data
? sample
unlink('content/en/tidyverse/Chapter1/00_Chp_SubsetRows_cache', recursive = TRUE)
unlink('content/en/tidyverse/Chapter1/00_Chp_SubsetRows_cache', recursive = TRUE)
set.seed(12345)
data %>% slice_sample(n = 5)
library(gapminder)
library(tidyverse)
data <- gapminder
data$row_no = 1:nrow(data)
slice(data, 2:5)  # to select the row from 2 to 5
slice(data, c(7, 5, 1)) # to select specific rows in a specific order
slice(data, 10) #note that including a number and not a vector also works
data %>% slice(2:5)
slice(data, 200:n()) %>% head(10)
# note that it outputs a new dataframe, however you can check that the initial data
# was not modified, and that you did not create a new object in the workspace
data %>% slice_tail(n=10)
# if you want to save it with a new name
data2 <- data %>% slice_tail(n=10)
data %>% slice(c(3,50, 200))
set.seed(12345)
data %>% slice_sample(n = 5)
data %>% slice_sample(n = 5, replace = TRUE)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
data10 <- data %>% slice_head(n=10)
data10 %>% slice_sample(n = 20, replace = TRUE)
SAdat <- filter(data, country=="South Africa")
head(SAdat)  #the function head selects the first 6 rows of a data frame
SA2000 <- filter(data, country=="South Africa" & year > 2000)
head(SA2000,3)
filter(data, continent=="Africa" , year > 2003, pop > 30000000)
filter(data, country=="South Africa" & !(year %in% c(1962, 1977, 2003)))
set.seed(123)
data <- gapminder %>%
filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
# using tidyverse approach:
random_names <- gapminder %>%
select(country) %>%
unique() %>%      # take only one record per country
as_vector() %>%   # as_vector transforms a data.frame into a vector
sample(10, replace = FALSE)   # take a 10 random sample
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10, replace=FALSE)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
filter(country %in% random_names) %>%
arrange(country)
data
library(gapminder)
library(tidyverse)
data <- gapminder
data$row_no = 1:nrow(data)
slice(data, 2:5)  # to select the row from 2 to 5
slice(data, c(7, 5, 1)) # to select specific rows in a specific order
slice(data, 10) #note that including a numeric and not a vector also works
data %>% slice(2:5)
slice(data, 200:n()) %>% head(10)
# note that it outputs a new dataframe, however you can check that the initial data
# was not modified, and that you did not create a new object in the workspace
data %>% slice_tail(n=10)
# if you want to save it with a new name
data2 <- data %>% slice_tail(n=10)
data %>% slice(c(3,50, 200))
set.seed(12345)
data %>% slice_sample(n = 5)
data %>% slice_sample(n = 5, replace = TRUE)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345)  # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345) # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
data10 <- data %>% slice_head(n=10)
data10 %>% slice_sample(n = 20, replace = TRUE)
SAdata <- filter(data, country=="South Africa")
SAdata
SA2000 <- filter(data, country=="South Africa" & year > 2000)
filter(data, continent=="Africa" , year > 2003, pop > 30000000)
filter(data, country=="South Africa" & !(year %in% c(1962, 1977, 2003)))
set.seed(123)
data <- gapminder %>%
filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
# using tidyverse approach:
random_names <- gapminder %>%
select(country) %>%
unique() %>%      # take only one record per country
as_vector() %>%   # as_vector transforms a data.frame into a vector
sample(10, replace = FALSE)   # take a 10 random sample
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10, replace=FALSE)
random_names
gapminder <- filter(country %in% random_names & year > 2000) %>%
arrange(country)
gapminder
gapminder %>%> filter(country %in% random_names & year > 2000) %>%
gapminder %>% filter(country %in% random_names & year > 2000) %>%
arrange(country)
library(tidyverse)
library(gapminder)
data <- gapminder
data$row_no = 1:nrow(data)
slice(data, 2:5)  # to select the row from 2 to 5
slice(data, c(7, 5, 1)) # to select specific rows in a specific order
slice(data, 10) #note that including a numeric and not a vector also works
data %>% slice(2:5)
slice(data, 200:n()) %>% head(10)
# note that it outputs a new dataframe, however you can check that the initial data
# was not modified, and that you did not create a new object in the workspace
data %>% slice_tail(n=10)
# if you want to save it with a new name
data2 <- data %>% slice_tail(n=10)
data %>% slice(c(3,50, 200))
set.seed(12345)
data %>% slice_sample(n = 5)
data %>% slice_sample(n = 5, replace = TRUE)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345)  # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345) # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
data10 <- data %>% slice_head(n=10)
data10 %>% slice_sample(n = 20, replace = TRUE)
SAdata <- filter(data, country=="South Africa")
SAdata
SA2000 <- filter(data, country=="South Africa" & year > 2000)
filter(data, continent=="Africa" , year > 2003, pop > 30000000)
filter(data, country=="South Africa" & !(year %in% c(1962, 1977, 2003)))
set.seed(123)
data <- gapminder %>%
filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
# using tidyverse approach:
random_names <- gapminder %>%
select(country) %>%
unique() %>%      # take only one record per country
as_vector() %>%   # as_vector transforms a data.frame into a vector
sample(10, replace = FALSE)   # take a 10 random sample
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10, replace=FALSE)
random_names
gapminder %>% filter(country %in% random_names & year > 2000) %>% arrange(country)
library(tidyverse)
library(gapminder)
data <- gapminder
data$row_no = 1:nrow(data)
slice(data, 2:5)  # to select the row from 2 to 5
slice(data, c(7, 5, 1)) # to select specific rows in a specific order
slice(data, 10) #note that including a numeric and not a vector also works
data %>% slice(2:5)
slice(data, 200:n()) %>% head(10)
# note that it outputs a new dataframe, however you can check that the initial data
# was not modified, and that you did not create a new object in the workspace
data %>% slice_tail(n=10)
# if you want to save it with a new name
data2 <- data %>% slice_tail(n=10)
data %>% slice(c(3,50, 200))
set.seed(12345)
data %>% slice_sample(n = 5)
data %>% slice_sample(n = 5, replace = TRUE)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345)  # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345) # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
data10 <- data %>% slice_head(n=10)
data10 %>% slice_sample(n = 20, replace = TRUE)
SAdata <- filter(data, country=="South Africa")
SAdata
SA2000 <- filter(data, country=="South Africa" & year > 2000)
filter(data, continent=="Africa" , year > 2003, pop > 30000000)
filter(data, country=="South Africa" & !(year %in% c(1962, 1977, 2003)))
set.seed(123)
data <- gapminder %>%
filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
# using tidyverse approach:
random_names <- gapminder %>%
select(country) %>%
unique() %>%      # take only one record per country
as_vector() %>%   # as_vector transforms a data.frame into a vector
sample(10, replace = FALSE)   # take a 10 random sample
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10, replace=FALSE)
random_names
gapminder %>% filter(country %in% random_names & year > 2000) %>% arrange(country)
library(tidyverse)
library(gapminder)
data <- gapminder
data$row_no = 1:nrow(data)
slice(data, 2:5)  # to select the row from 2 to 5
slice(data, c(7, 5, 1)) # to select specific rows in a specific order
slice(data, 10) #note that including a numeric and not a vector also works
data %>% slice(2:5)
slice(data, 200:n()) %>% head(10)
# note that it outputs a new dataframe, however you can check that the initial data
# was not modified, and that you did not create a new object in the workspace
data %>% slice_tail(n=10)
# if you want to save it with a new name
data2 <- data %>% slice_tail(n=10)
data %>% slice(c(3,50, 200))
set.seed(12345)
data %>% slice_sample(n = 5)
data %>% slice_sample(n = 5, replace = TRUE)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345)  # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345) # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
data10 <- data %>% slice_head(n=10)
data10 %>% slice_sample(n = 20, replace = TRUE)
SAdata <- filter(data, country=="South Africa")
SAdata
SA2000 <- filter(data, country=="South Africa" & year > 2000)
filter(data, continent=="Africa" , year > 2003, pop > 30000000)
filter(data, country=="South Africa" & !(year %in% c(1962, 1977, 2003)))
set.seed(123)
data <- gapminder %>%
filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
# using tidyverse approach:
random_names <- gapminder %>%
select(country) %>%
unique() %>%      # take only one record per country
as_vector() %>%   # as_vector transforms a data.frame into a vector
sample(10, replace = FALSE)   # take a 10 random sample
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10, replace=FALSE)
random_names
gapminder %>% filter(country %in% random_names & year > 2000) %>% arrange(country)
unlink('content/en/tidyverse/Chapter1/00_Chp_SubsetRows_cache', recursive = TRUE)
library(tidyverse)
library(gapminder)
data <- gapminder
data$row_no = 1:nrow(data)
slice(data, 2:5)  # to select the row from 2 to 5
slice(data, c(7, 5, 1)) # to select specific rows in a specific order
slice(data, 10) #note that including a numeric and not a vector also works
data %>% slice(2:5)
slice(data, 200:n()) %>% head(10)
# note that it outputs a new dataframe, however you can check that the initial data
# was not modified, and that you did not create a new object in the workspace
data %>% slice_tail(n=10)
# if you want to save it with a new name
data2 <- data %>% slice_tail(n=10)
data %>% slice(c(3,50, 200))
set.seed(12345)
data %>% slice_sample(n = 5)
data %>% slice_sample(n = 5, replace = TRUE)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345)  # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345) # set the seed for pseudorandom generator
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
data10 <- data %>% slice_head(n=10)
data10 %>% slice_sample(n = 20, replace = TRUE)
SAdata <- filter(data, country=="South Africa")
SAdata
SA2000 <- filter(data, country=="South Africa" & year > 2000)
filter(data, continent=="Africa" , year > 2003, pop > 30000000)
filter(data, country=="South Africa" & !(year %in% c(1962, 1977, 2003)))
set.seed(123)
data <- gapminder %>%
filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
# using tidyverse approach:
random_names <- gapminder %>%
select(country) %>%
unique() %>%      # take only one record per country
as_vector() %>%   # as_vector transforms a data.frame into a vector
sample(10, replace = FALSE)   # take a 10 random sample
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10, replace=FALSE)
random_names
gapminder %>% filter(country %in% random_names & year > 2000) %>% arrange(country)
unlink('content/en/tidyverse/Chapter1/00_Chp_SubsetRows_cache', recursive = TRUE)
unlink('content/en/tidyverse/Chapter1/00_Chp_SubsetRows_cache', recursive = TRUE)
rnorm(10)
tenunif <- runif(10)
tenunif
sample20 <- sample(-20:20, 20)
sample20 <- sample(-20:20, 20)
sample20 <- sample(-20:20, 20)
sample20
sample20 <- sample(-20:20, 20, replace = FALSE)
sample20
set.seed(1234)
sample20 <- sample(-20:20, 20, replace = FALSE)
sample20
set.seed(1234)
sample20 <- sample(-20:20, 20, replace = FALSE)
sample20
(fifteennorm <-rnorm(n=15, mean=20, sd=2)
(fifteennorm <-rnorm(n=15, mean=20, sd=2))
(tenunif2 <- runif(n=10, min=10, max=20))
v1 <- c(1,4,5,10)
c(1,4,5,10)
1:40
c(1,2, 5:10)
seq(1,19,2)
seq(from=1,to=19, by=2)
seq(from=1,to=19, by=.2)
seq(from=1,to=19, by=.2, length.out = 10)
seq(from=1,to=19, by=.2, length.out = 10)
? seq
seq(from=1,to=19, by=.2)
seq(by=.2)
seq()
seq(1,2)
seq(1,3)
seq(1,3, length.out = 10)
seq(1,3, length = 10)
seq(1,3, length.out = 10)
seq(1, 3, length.out = 10)
seq(1, 3, length.out = 20)
seq(1,10, by=-0.5)
seq(10,1, by=-0.5)
seq(10,1)
seq(10,1, length=30)
seq(1, 10)
seq(1, 10, by = 0.2)
40:1
40:1:2
40:1
c(1,2, 10:5)
c(1, 4, 20, 20, 40)
c(1, 4, 20, 20, 40)
1:40
30:10
c(1,2,3, 10:1)
c(1, 2, 20, 20, 30)
c(12, 12, 45, 30, 200)
1:40
40:1
c(12, 34, 40, 10:1)
# Using c()
c(9, 10, 15, 200, 90)
1:20
20:10
c(1:5, 200, 30)
x1 <- c(1:20, 30, 20:1)
x1
# Random integers
sample(x= 1:100, n=10)
? sample
# Random integers
sample(x= 1:100, size=10)
sample(1:20, 15, replace=TRUE)
sample(c(1,30, 40, 35), 4)
sample(c(1,30, 40, 35), 10)
sample(c(1,30, 40, 35), 10, replace=TRUE)
runif(15, min=0, max=1)
x <- runif(200)
hist(x)
runif(20, min=10, max=20)
rnorm(n = 20, mean = 0, sd = 1)
x<- rnorm(n = 500, mean = 0, sd = 1)
hist(x)
sample(x= c("A", "B", "C"), size=10, replace=TRUE)
? Distributions
? Distribution
? Distributions
