# will select only the numeric variables
data %>% select(where(is.numeric)) %>% head(5)
# Select of the variables with names starting with C
data %>% select(starts_with("c"))
# Select of the variables with names containing O
data %>% select(contains("O"))
data %>% select(row_no, year, contains("o")) %>% head(5)
# this will make the row_no variable as the first colum
data %>% relocate(row_no) %>% head(3)
data %>% filter(continent == "Africa") %>%
select(country, pop)
data %>% arrange(-pop) %>%
select(country, gdpPercap) %>%
slice_head(n=10)
data %>% arrange(-pop) %>%
select(country, , population, gdpPercap) %>%
slice_head(n=10)
data %>% arrange(-pop) %>%
select(country, , pop, gdpPercap) %>%
slice_head(n=10)
data %>% filter(year==2007) %>%
arrange(-pop) %>%
select(country, pop, gdpPercap) %>%
slice_head(n=10)
data %>% filter(year==2007) %>%
arrange(-gdpPercap) %>%
select(country, lifeExp, gdpPercap) %>%
slice_head(n=10)
data %>% filter(year==2007) %>%
arrange(-gdpPercap) %>%
select(country, lifeExp, gdpPercap) %>%
slice(1:5, (n()-10:n()))
data %>% filter(year==2007) %>%
arrange(-gdpPercap) %>%
select(country, lifeExp, gdpPercap) %>%
slice(c(1:5, (n()-5:n())))
data %>% filter(year==2007) %>%
arrange(-gdpPercap) %>%
select(country, lifeExp, gdpPercap) %>%
slice(n())
data %>% filter(year==2007) %>%
arrange(-gdpPercap) %>%
select(country, lifeExp, gdpPercap) %>%
slice(n()-5)
data %>% filter(year==2007) %>%
arrange(-gdpPercap) %>%
select(country, lifeExp, gdpPercap) %>%
slice(n()-5:n())
data %>% filter(year==2007) %>%
arrange(-gdpPercap) %>%
select(country, lifeExp, gdpPercap) %>%
slice((n()-5):n())
data %>% filter(year==2007) %>%
arrange(-gdpPercap) %>%
select(country, lifeExp, gdpPercap) %>%
slice(1:5, (n()-5):n())
data %>% filter(year==2007) %>%
arrange(-gdpPercap) %>%
select(country, lifeExp, gdpPercap) %>%
slice(1:5, (n()-4):n())
data <- gapminder
source('~/.active-rstudio-document', echo=TRUE)
library(gapminder)
library(tidyverse)
data <- gapminder
View(data)
data <- gapminder
data %>% arrange(year, country)
library(gapminder)
library(tidyverse)
data <- gapminder
head(data)
data %>% arrange(year, country)
arrange(data, year, country)
library(gapminder)
library(dplyr)
arrange(gapminder, year, country)
library(gapminder)
library(dplyr)
arrange(gapminder, year, country)
gapminder %>% arrange(year, country)
library(gapminder)
library(dplyr)
arrange(gapminder, year, country)
gapminder %>% arrange(year, country)
arrange(gapminder, year)
gapminder %>% arrange(year)
library(gapminder)
library(dplyr)
arrange(gapminder, year)
gapminder %>% arrange(year)
library(gapminder)
library(dplyr)
arrange(gapminder, year)
gapminder %>% select(year, country, gdpPerCap) %>%
arrange(year)
gapminder %>% select(year, country, gdpPercap) %>%
arrange(year)
gapminder %>% select(year, country, gdpPercap) %>%
arrange(gdpPercap)
library(gapminder)
library(tidyverse)
data <- gapminder
data$row_no = 1:nrow(data)
View(data)
View(data)
data %>% filter(country=="Zimbabwe") %>%
mutate(GDP = gdpPercap * pop) %>%
select(country, year, GDP) %>%
arrange(year)
data %>% filter(country=="Zimbabwe" & year >1972) %>%
mutate(GDP = gdpPercap * pop) %>%
select(country, year, GDP) %>%
arrange(year)
data %>% filter(country=="Zimbabwe" & year >1972) %>%
mutate(GDP = gdpPercap * pop / 1000000) %>%
select(country, year, GDP) %>%
arrange(year)
data %>% filter(continent=="Zimbabwe" & substr(country,1,1)=="A" & year==2007) %>%
mutate(GDP = gdpPercap * pop / 1000000) %>%
select(country,  GDP) %>%
arrange(-GDP)
substr(data$country,1,1)
data %>% filter(continent=="Africa" & substr(country,1,1)=="A" & year==2007) %>%
mutate(GDP = gdpPercap * pop / 1000000) %>%
select(country,  GDP) %>%
arrange(-GDP)
data %>% filter(continent=="Africa" & substr(country,1,1) %in% c("A", "B") & year==2007) %>%
mutate(GDP = gdpPercap * pop / 1000000) %>%
select(country,  GDP) %>%
arrange(-GDP)
data %>% filter(continent=="Africa" & substr(country,1,1) %in% c("A", "B") & year==2007) %>%
mutate(GDP = gdpPercap * pop / 1000000) %>%
select(country,  GDP) %>%
arrange(GDP)
library(tidyverse)
library(gapminder)
gapminder
gapminder %>%
pivot_wider(names_from = "year", values_from = "pop")
? pivot_wider
gapminder %>%
pivot_wider(names_from = year, values_from = "pop")
gapminder %>%
pivot_wider(id_cols=1:4 , names_from = year, values_from = "pop")
gapminder %>%
pivot_wider(id_cols=1:5 , names_from = year, values_from = "pop")
gapminder %>%
pivot_wider(names_from = year, values_from = "pop")
gapminder %>%
pivot_wider(names_from = pop, values_from = year)
gapminder %>%
pivot_wider(names_from = year, values_from = pop, gdpPercap)
gapminder %>%
pivot_wider(names_from = year, values_from = c(pop, gdpPercap))
gapminder %>%
pivot_wider(names_from = year, values_from = c(pop, gdpPercap, lifeExp))
gapminder %>% filter(year > 2000)%>%
pivot_wider(names_from = year, values_from = c(pop, gdpPercap, lifeExp))
gapminder %>% filter(year > 2000)%>%
pivot_wider(names_from = year, values_from = c(pop, gdpPercap, lifeExp)) %>%
arrange(continent, country)
gapminder %>% filter(year > 2000)%>%
pivot_wider(names_from = year, values_from = c(pop)) %>%
arrange(continent, country)
gapminder %>% filter(year > 2000)%>% select(country, continent, pop) %>%
pivot_wider(names_from = year, values_from = c(pop)) %>%
arrange(continent, country)
gapminder %>% filter(year > 2000)%>% select(country, continent,year, pop) %>%
pivot_wider(names_from = year, values_from = c(pop)) %>%
arrange(continent, country)
gapminder %>% filter(year > 2000)%>% select(country, continent,year, pop) %>%
pivot_wider(names_from = year, values_from = c(pop), names_prefix = "pop") %>%
arrange(continent, country)
gapminder %>%
filter(year > 2000) %>%   # we keep only interesting years
select(country, continent,year, pop, lifeExp) %>%  # we keep the interesting variables
pivot_wider(names_from = year, values_from = c(pop, lifeExp)) %>%
arrange(continent, country) # we sort
data %>%
select(country, continent, year, pop) %>%  # we keep the interesting variables
pivot_wider(names_from = year, values_from = c(pop), names_prefix = "popul") %>%
arrange(continent, country) # we sort
library(panelr)
install.packages(panelr)
install.packages("panelr")
library(panelr)
data("WageData")
head(WageData)
(wages <- WageData %>% select(id, t, lwage, ed) )
library(tidyverse)
library(gapminder)
data <- gapminder %>% filter(year >2000)
data
data %>%
select(country, continent, year, pop) %>%  # we keep the interesting variables
pivot_wider(names_from = year, values_from = c(pop), names_prefix = "popul") %>%
arrange(continent, country) # we sort
data %>%
select(country, continent, year, pop, lifeExp) %>%  # we keep the interesting variables
pivot_wider(names_from = year, values_from = c(pop, lifeExp)) %>% #select variables to reshape
arrange(continent, country) # we sort
library(panelr)
data("WageData")
head(WageData)
(wages <- WageData %>% select(id, t, lwage, ed) )
wages %>% pivot_wider(names_from = t, values_from=lwage)
wages %>% pivot_wider(names_from = t, values_from=lwage, names_prefix = "lwage")
? panelr
library(gapminder)
library(tidyverse)
gapminder
mind2 <- gapminder %>% select(country) %>% unique()
View(mind2)
mind2 <- gapminder %>%
select(country) %>%
unique() %>%
mutate(rVar = rnorm(n= n()))
mind2
gapminder %>% inner_join(mind2)
gapminder
data("gapminder")
slice_sample(n=2)
mind2
? slice_sample(n=2)
mind2 <- gapminder %>%
select(country) %>%
unique() %>%
mutate(rVar = rnorm(n= n())) %>%
slice_sample(n=2)
mind2
gapminder %>% inner_join(mind2)
data <- gapminder %>% select(year>2000)
gapminder
data <- gapminder %>% select( year > 2000)
data <- gapminder %>% filter(year > 2000)
data
gapminder %>% inner_join(mind2)
data %>% inner_join(mind2)
mind2 <- gapminder %>%
select(country) %>%
unique() %>%
mutate(rVar = rnorm(n= n())) %>%
slice_sample(n=3)
mind2
mind2
data %>% left_join(mind2)
data %>% full_join(mind2)
df <- data %>% full_join(mind2)
View(df)
mind2 <- gapminder %>%
select(country) %>%
unique() %>%
mutate(rVar = rnorm(n= n())) %>%
slice_sample(n=4)
mind2
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10)
data
data <- gapminder %>% filter(year > 2000 ) %>%
filter(country %in% sample(gapminder$country, 10))
data
sample(unique(gapminder$country), 10)
data <- gapminder %>% filter(year > 2000 ) %>%
filter(country %in% sample(unique(gapminder$country), 10))
data
mind2 <- data %>%
select(country) %>%
unique() %>%
mutate(rVar = rnorm(n= n())) %>%
slice_sample(n=4)
mind2
data %>% inner_join(mind2)
df <- data %>% full_join(mind2)
df
data <- data %>% filter(country != sample(unique(data$country), 1))
data
data %>% inner_join(mind2)
data
mind2 %>% inner_join(data)
data %>% inner_join(mind2)
data %>% full_join(mind2)
data %>% left_join(mind2)
data %>% full_join(mind2)
data %>% full_join(mind2)
data %>% left_join(mind2)
data
data <- gapminder %>% filter(year > 2000 ) %>%
filter(country %in% sample(unique(gapminder$country), 10))
mind2 <- data %>%
select(country) %>%
unique() %>%
mutate(rVar = rnorm(n= n())) %>%
slice_sample(n=4)
mind2
data <- data %>% filter(country != sample(unique(mind2$country), 1))
data
data %>% inner_join(mind2)
mind2 %>% inner_join(data)
data %>% full_join(mind2)
data %>% left_join(mind2)
seed(123)
??seed
library(gapminder)
library(tidyverse)
data("gapminder")
set.seed(123)
data <- gapminder %>% filter(year > 2000 ) %>%
filter(country %in% sample(unique(gapminder$country), 10))
data
mind2 <- data %>%
select(country) %>%
unique() %>%
mutate(rVar = rnorm(n= n())) %>%
slice_sample(n=4)
mind2
data <- data %>%
filter(country != sample(unique(mind2$country), 1))
set.seed(123)
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10)
data
set.seed(123)
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10)
data
set.seed(123)
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10)
data
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
set.seed(123)
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
set.seed(123)
gapminder %>% select(country) %>% unique()
country_names
country_names <- gapminder %>% select(country) %>% unique() %>% sample(n=10)
country_names <- gapminder %>% select(country) %>% unique() %>% sample(., n=10)
set.seed(123)
country_names <- gapminder %>% select(country) %>% unique() %>% sample(10)
set.seed(123)
country_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
country_names
set.seed(123)
country_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
country_names <- sample(unique(data$country), 10)
country_names
country_codes
? country_codes
set.seed(123)
country_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
country_names <- sample(unique(data$country), 10)
country_names
set.seed(123)
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
random_names <- sample(unique(data$country), 10)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country=random_names) %>% arrange(country)
data
library(tidyverse)
set.seed(12345)
N <- 6
d <- tibble(resp_id=rep(1:N),
name = sample(c("John", "Mary", "Mosis", "Steven"), N, TRUE),
age = sample(30:50, N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
ans_1=sample(3,N,TRUE),
ans_2=sample(3,N,TRUE),
ans_3=sample(2,N,TRUE))
dt <- pivot_longer(d, cols=contains("ans"),
names_prefix = "ans_", names_to = "question", values_to = "answer")
questions <- dt %>% select(resp_id, question, answer) %>% filter((resp_id != 4 | question!=2) & resp_id != 5)
questions <- questions %>% add_row(resp_id=7, question="1", answer=2)
demog <- dt %>% select(resp_id, name, age, city) %>% distinct()
demog
questions
demog %>% inner_join(questions, by = "resp_id")
demog %>% left_join(questions, by = "resp_id")
demog %>% full_join(questions, by = "resp_id")
set.seed(123)
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
random_names <- sample(unique(data$country), 10)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country=random_names) %>% arrange(country)
data
library(tidyverse)
set.seed(12345)
N <- 6
d <- tibble(resp_id=rep(1:N),
name = sample(c("John", "Mary", "Mosis", "Steven"), N, TRUE),
age = sample(30:50, N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
ans_1=sample(3,N,TRUE),
ans_2=sample(3,N,TRUE),
ans_3=sample(2,N,TRUE))
dt <- pivot_longer(d, cols=contains("ans"),
names_prefix = "ans_", names_to = "question", values_to = "answer")
questions <- dt %>% select(resp_id, question, answer) %>% filter((resp_id != 4 | question!=2) & resp_id != 5)
questions <- questions %>% add_row(resp_id=7, question="1", answer=2)
demog <- dt %>% select(resp_id, name, age, city) %>% distinct()
demog
questions
demog %>% inner_join(questions, by = "resp_id")
demog %>% left_join(questions, by = "resp_id")
demog %>% full_join(questions, by = "resp_id")
set.seed(123)
data <- gapminder %>% filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
random_names <- sample(unique(data$country), 10)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country==random_names) %>% arrange(country)
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country %in% random_names) %>% arrange(country)
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
random_names <- sample(unique(data$country), 10)
random_names
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10)
random_names
random_names <- gapminder %>% select(country) %>% unique() %>% as_vector() %>% sample(10)
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
slice(country %in% random_names) %>% arrange(country)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
filter(country %in% random_names) %>% arrange(country)
data
? sample
unlink('content/en/tidyverse/Chapter1/00_Chp_SubsetRows_cache', recursive = TRUE)
unlink('content/en/tidyverse/Chapter1/00_Chp_SubsetRows_cache', recursive = TRUE)
set.seed(12345)
data %>% slice_sample(n = 5)
library(gapminder)
library(tidyverse)
data <- gapminder
data$row_no = 1:nrow(data)
slice(data, 2:5)  # to select the row from 2 to 5
slice(data, c(7, 5, 1)) # to select specific rows in a specific order
slice(data, 10) #note that including a number and not a vector also works
data %>% slice(2:5)
slice(data, 200:n()) %>% head(10)
# note that it outputs a new dataframe, however you can check that the initial data
# was not modified, and that you did not create a new object in the workspace
data %>% slice_tail(n=10)
# if you want to save it with a new name
data2 <- data %>% slice_tail(n=10)
data %>% slice(c(3,50, 200))
set.seed(12345)
data %>% slice_sample(n = 5)
data %>% slice_sample(n = 5, replace = TRUE)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
set.seed(12345)
sample(1:200, 5)  # sample out 5 numbers from the vector 1:200
data10 <- data %>% slice_head(n=10)
data10 %>% slice_sample(n = 20, replace = TRUE)
SAdat <- filter(data, country=="South Africa")
head(SAdat)  #the function head selects the first 6 rows of a data frame
SA2000 <- filter(data, country=="South Africa" & year > 2000)
head(SA2000,3)
filter(data, continent=="Africa" , year > 2003, pop > 30000000)
filter(data, country=="South Africa" & !(year %in% c(1962, 1977, 2003)))
set.seed(123)
data <- gapminder %>%
filter(year > 2000 ) %>%
slice_sample(n=10) %>% arrange(country)
data
# using tidyverse approach:
random_names <- gapminder %>%
select(country) %>%
unique() %>%      # take only one record per country
as_vector() %>%   # as_vector transforms a data.frame into a vector
sample(10, replace = FALSE)   # take a 10 random sample
# sometimes tidyverse can be long
# it might be easier to use the following command:
set.seed(123)
random_names <- sample(unique(data$country), 10, replace=FALSE)
random_names
data <- gapminder %>% filter(year > 2000 ) %>%
filter(country %in% random_names) %>%
arrange(country)
data
