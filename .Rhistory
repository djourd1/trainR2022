z <- 3.2
int_z <- as.integer(z)
mode(int_z)
z <- 3.2
int_z <- as.integer(z)
is.integer(int_z)
z <- 3.2
int_z <- as.integer(z)
mode(int_z)
is.integer(int_z)
y <- 1L
str(y)
x <- 2L + TRUE
x
mode(x)
x <- 2L + TRUE
x
mode(x)
is.integer(x)
y <- 3 + FALSE
y
mode(y)
is.integer(y)
? cat
x <- "Double quotes \" delimitate R’s strings."
print(x)
cat(x)
? sub()
x <- "Double quotes \" delimitate R’s strings."
print(x)
cat(x)
y <- sub("\"","", x)
x <- "Double quotes \" delimitate R’s strings."
print(x)
cat(x)
y <- sub("\"","", x)
print(y)
y <- sub(" \"","", x)
print(y)
x <- "Double quotes \" delimitate R’s strings."
print(x)
cat(x)
y <- sub(" \"","", x)
cat(y)
x <- "Double quotes \" delimitate R’s strings."
print(x)
cat(x)
y <- sub(" \"","", x)
cat(y)
as.numeric(1L)
is.integer(as.numeric(1L))
gender = c("male","female","female","male","female","female")
gender
gender.fac2 = factor(gender, levels=c("Male", "Female"))
gender.fac2
gender.fac2 = factor(gender, levels=c("male", "female"))
gender.fac2
str(gender.fac2)
? htmltools::tagList
htmltools::tagList(
htmltools::tag("script", async, type="text/javascript" src="http://cdn.datacamp.com/dcl-react.js.gz")
htmltools::tagList(
htmltools::tag$script(src="http://cdn.datacamp.com/dcl-react.js.gz")
)
htmltools::tag$script(src="http://cdn.datacamp.com/dcl-react.js.gz")
htmltools::tagList(
htmltools::tags$script(src = "https://d3js.org/d3.v4.min.js"),
htmltools::tags$script(src = "https://cdnjs.cloudflare.com/ajax/libs/dimple/2.3.0/dimple.latest.min.js")
)
htmltools::tagList(
htmltools::tags$script(src = src="//cdn.datacamp.com/dcl-react.js.gz")
htmltools::tagList(
htmltools::tags$script(src="//cdn.datacamp.com/dcl-react.js.gz")
)
htmltools::tagList(
htmltools::tags$script(src="//cdn.datacamp.com/dcl-react.js.gz")
)
htmltools::tagList(
htmltools::tags$script(src="//cdn.datacamp.com/dcl-react.js.gz")
)
```{=html}
<script async  src="https://cdn.datacamp.com/dcl/script-41eb27f7cc.js" charset="utf-8"></script>
```
```{=html}
<script type="text/javascript" src="https://cdn.datacamp.com/dcl/script-41eb27f7cc.js" charset="utf-8"></script>
```
? slice
library(tidyverse)
? slice
1:4 %*% matrix(1:8, ncol=2)
matrix(1:8, ncol=2)
matrix(1:8, ncol=2)
1:4 * matrix(1:8, ncol=2)
help(%*%)
help("%*%")
matrix(1:8, ncol=2) %*% 1:4
matrix(1:8, ncol=2)
matrix(1:8, ncol=4)
matrix(1:8, ncol=4) %*% 1:4
matrix(1:8, ncol=4) %*% 1:4
1:4 * matrix(1:8, ncol=2)
det(1:4 * matrix(1:8, ncol=2))
det(1:4 * matrix(1:8, ncol=2))
x <-1:4 * matrix(1:8, ncol=2)
x
x %*% x
x %*% t(x)
det(x %*% x)
det(x %*% t(x))
t(x) %*% x
det(t(x) %*% x)
det(x %*% t(x))
x %*% t(x)
A <- matrix(c(3,-3,2,4), ncol=2); A
b <- c(1, 0.5); b
A <- matrix(c(3:1, 1:3, rep(1,3)), byrow=TRUE, ncol=3)
A
b = rep(1,3)
Solve(A,b)
solve(A,b)
A <- matrix(c(3:1, 1:3, c(1,-1,1)), byrow=TRUE, ncol=3)
A
det(A)
b = c(1,-1,2)
solve(A,b)
A <- matrix(c(3:1, c(1,3,4), c(1,-1,1)), byrow=TRUE, ncol=3)
A
b = c(1,5,2)
solve(A,b)
A[1,]
A[1,] %*% solve(A,b)
A[2,] %*% solve(A,b)
A[3,] %*% solve(A,b)
data %>%
group_by(country) %>%
summarize(m_pop = mean(pop))
library(gapminder)
library(tidyverse)
data <- gapminder
data$row_no = 1:nrow(data)
data %>%
group_by(country) %>%
summarize(m_pop = mean(pop))
data %>% filter(continent=="Africa" & substr(country,1,1) %in% c("A", "B") & year==2007) %>%
mutate(GDP = gdpPercap * pop / 1000000) %>%
select(country,  GDP) %>%
arrange(GDP)
data %>%
group_by(country) %>%
summarize(m_pop = mean(pop/1000)
data %>%
group_by(country) %>%
summarize(m_pop = mean(pop/1000))
data %>%
group_by(country) %>%
summarize(m_pop = mean(pop/1000000))
data %>%
group_by(country) %>%
summarize(m_pop = round(mean(pop/1000000),1))
data %>%
group_by(country) %>%
summarize(m_pop = round(mean(pop/1000000),1), N = n())
data %>% slice(year %in% c(1952,2002))
data %>% group_by(year) %>% summarize(mean(pop))
data %>% filter(year %in% c(1952, 2007))
? lag
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
mutate(diffPop = pop - lag(pop))
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
mutate(diffPop = pop - lag(pop)) %>%
select(country, year, diffPop)
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
mutate(diffPop = pop - lag(pop)) %>%
select(country, year, pop, diffPop)
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(diffPop = pop - lag(pop)) %>%
select(country, year, pop, diffPop)
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(diffPop = pop - lag(pop), growth = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop)
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(diffPop = pop - lag(pop), growthPop = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop, growthPop)
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(diffPop = pop - lag(pop), growthPop = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop, growthPop) %>%
arrange(desc(growthPop))
data %>% filter(year %in% c(1952, 2007)) %>%
group_by(country, year) %>%
mutate(diffPop = pop - lag(pop), growthPop = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop, growthPop) %>%
filter(!is.na(growthPop)) %>%
arrange(desc(growthPop))
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
mutate(diffPop = pop - lag(pop), growthPop = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop, growthPop) %>%
filter(!is.na(growthPop)) %>%
arrange(desc(growthPop))
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
group_by(country, year) %>%
mutate(diffPop = pop - lag(pop), growthPop = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop, growthPop) %>%
filter(!is.na(growthPop)) %>%
arrange(desc(growthPop))
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(year) %>%
group_by(country, year) %>%
mutate(diffPop = pop - lag(pop), growthPop = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop, growthPop) %>%
filter(!is.na(growthPop)) %>%
arrange(desc(growthPop))
data %>% filter(year %in% c(1952, 2007)) %>%
arrange(country, year) %>%
group_by(country) %>%
mutate(diffPop = pop - lag(pop), growthPop = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop, growthPop) %>%
filter(!is.na(growthPop)) %>%
arrange(desc(growthPop))
data %>% filter(year %in% c(1952, 2007)) %>%
group_by(country) %>%
mutate(diffPop = pop - lag(pop), growthPop = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop, growthPop) %>%
filter(!is.na(growthPop)) %>%
arrange(desc(growthPop))
View(data)
data %>%
filter(year %in% c(2002, 2007) %>%
group_by(country) %>%
mutate(diffGDP = gdpPerCap - lag(gdpPerCap), growthGDP = diffGDP/lag(gdpPercap)) %>%
group_by(continent) %>%
summarize(mgrowth = mean(growthGDP))  %>%
arrange(desc(mgrowth))
data %>% filter(year %in% c(2002, 2007)
data %>% filter(year %in% c(2002, 2007)) %>%
data %>%
filter(year %in% c(2002, 2007)) %>%
group_by(country) %>%
mutate(diffGDP = gdpPerCap - lag(gdpPerCap), growthGDP = diffGDP/lag(gdpPercap)) %>%
group_by(continent) %>%
summarize(mgrowth = mean(growthGDP))  %>%
arrange(desc(mgrowth))
data %>%
filter(year %in% c(2002, 2007)) %>%
group_by(country) %>%
mutate(diffGDP = gdpPercap - lag(gdpPercap), growthGDP = diffGDP/lag(gdpPercap)) %>%
group_by(continent) %>%
summarize(mgrowth = mean(growthGDP))  %>%
arrange(desc(mgrowth))
data %>%
filter(year %in% c(2002, 2007)) %>%
group_by(country) %>%
mutate(diffGDP = gdpPercap - lag(gdpPercap), growthGDP = diffGDP/lag(gdpPercap))
data %>%
filter(year %in% c(2002, 2007)) %>%
group_by(country) %>%
mutate(diffGDP = gdpPercap - lag(gdpPercap), growthGDP = diffGDP/lag(gdpPercap)) %>%
filter(!is.na(growthGDP)) %>%
group_by(continent) %>%
summarize(mgrowth = mean(growthGDP))  %>%
arrange(desc(mgrowth))
data %>%
filter(year %in% c(2002, 2007)) %>%
group_by(country) %>%
mutate(diffGDP = gdpPercap - lag(gdpPercap), growthGDP = diffGDP/lag(gdpPercap)) %>%
filter(!is.na(growthGDP)) %>%
group_by(continent) %>%
summarize(mGrowth = mean(growthGDP), sdGrowth = mean(growthGDP))  %>%
arrange(desc(mGrowth))
data %>%
filter(year %in% c(2002, 2007)) %>%
group_by(country) %>%
mutate(diffGDP = gdpPercap - lag(gdpPercap), growthGDP = diffGDP/lag(gdpPercap)) %>%
filter(!is.na(growthGDP)) %>%
group_by(continent) %>%
summarize(mGrowth = mean(growthGDP), sdGrowth = sd(growthGDP))  %>%
arrange(desc(mGrowth))
data
names(data)
data %>%
filter(year %in% c(1952, 2007)) %>%
group_by(continent, year) %>%
mutate(meanLife = mean(lifeExp), sdLife= sd(lifeExp))
library(gapminder)
library(tidyverse)
data <- gapminder
data$row_no = 1:nrow(data)
data %>%
group_by(country) %>%
summarize(m_pop = round(mean(pop/1000000),1))
data %>%
group_by(country) %>%
summarize(m_pop = round(mean(pop/1000000),1), N = n())
data %>%
filter(year %in% c(1952, 2007)) %>%
group_by(country) %>%
mutate(diffPop = pop - lag(pop), growthPop = diffPop/lag(pop)) %>%
select(country, year, pop, diffPop, growthPop) %>%
filter(!is.na(growthPop)) %>%
arrange(desc(growthPop))
data %>%
filter(year %in% c(1952, 2007)) %>%
group_by(continent, year) %>%
mutate(meanLife = mean(lifeExp), sdLife= sd(lifeExp))
data %>%
filter(year %in% c(2002, 2007)) %>%
group_by(country) %>%
mutate(diffGDP = gdpPercap - lag(gdpPercap), growthGDP = diffGDP/lag(gdpPercap)) %>%
filter(!is.na(growthGDP)) %>%
group_by(continent) %>%
summarize(mGrowth = mean(growthGDP), sdGrowth = sd(growthGDP))  %>%
arrange(desc(mGrowth))
data %>%
filter(year %in% c(1952, 2007)) %>%
group_by(continent, year) %>%
mutate(meanLife = mean(lifeExp), sdLife= sd(lifeExp)) %>%
select(continent, year, meanLife)
data %>%
filter(year %in% c(1952, 2007)) %>%
group_by(continent, year) %>%
mutate(meanLife = mean(lifeExp), sdLife= sd(lifeExp)) %>%
select(continent, year, meanLife)
data %>%
filter(year %in% c(1952, 2007)) %>%
select(continent, year, lifeExp) %>%
group_by(continent, year) %>%
mutate(meanLife = mean(lifeExp), sdLife= sd(lifeExp)) %>%
select(continent, year, meanLife)
data %>%
filter(year %in% c(1952, 2007)) %>%
select(continent, year, lifeExp) %>%
group_by(continent, year) %>%
summarize(meanLife = mean(lifeExp), sdLife= sd(lifeExp)) %>%
select(continent, year, meanLife)
data %>%
filter(year %in% c(1952, 2007)) %>%
select(continent, year, lifeExp) %>%
group_by(continent, year) %>%
summarize(meanLife = mean(lifeExp), sdLife= sd(lifeExp)) %>%
select(continent, year, meanLife)
data %>%
filter(year %in% c(1952, 2007)) %>%
group_by(continent, year) %>%
summarize(meanLife = mean(lifeExp), sdLife= sd(lifeExp)) %>%
select(continent, year, meanLife)
data %>%
filter(year %in% c(1952, 2007)) %>%
group_by(continent, year) %>%
summarize(meanLife = mean(lifeExp), sdLife= sd(lifeExp)) %>%
select(continent, year, meanLife, sdLife) %>%
arrange(year, meanLife)
matrix(c(1:12), nrow = 4, byrow = TRUE)
matrix(c(1:12), nrow = 4, byrow = TRUE)
Q
matrix(c(1:12), nrow = 4, byrow = TRUE)
matrix(c(1:12), nrow = 4)
matrix(c(1:12), nrow = 4, byrow = TRUE)
matrix(c(1:12), nrow = 4)
matrix(c(1:12), nrow = 4, byrow = TRUE
)
matrix(c(1:10), nrow = 4, byrow = TRUE)
matrix(c(1:12), nrow = 4)
matrix(c(1:12), nrow = 4
)
matrix(c(1:12), nrow = 4)
matrix(c(1:12), nrow = 4)
? matrix
vec <- 1:12
matrix(vec, nrow = 4)
mat1 = matrix(vec, nrow = 4)
mat1 = matrix(mat1, nrow = 2)
mat1
(vec <- 1:12)
(m1 <- matrix(vec, nrow = 4))
(m1r <- matrix(vec, nrow = 4, byrow = TRUE))
(m2 <- matrix(m1, nrow=3))
(vec <- 1:12)
(vec <- 1:12)
(m1 <- matrix(vec, nrow = 4))
(m1r <- matrix(vec, nrow = 4, byrow = TRUE))
(m2 <- matrix(m1, nrow=3))
(vec <- 1:12)
(m1 <- matrix(vec, nrow = 4))
(m11 <- matrix(1:12)
(m1r <- matrix(vec, nrow = 4, byrow = TRUE)))
(vec <- 1:12)
(m1 <- matrix(vec, nrow = 4))
(m11 <- matrix(1:12))
(m1r <- matrix(1:12, nrow = 4, byrow = TRUE))
matrix(1:6, nrow = 2)
matrix(1:6, nrow = 2, byrow = TRUE)
matrix(1:6, nrow = 2)
matrix(1:5, nrow = 2)
matrix(1, nrow = 2, ncol=3)
matrix(1:6)
1:6
1:6
matrix(1:6)
m1 = matrix(1:12, ncol=2)
(m1 = matrix(1:12, ncol=2))
(m1 = matrix(1:12, ncol=2))
matrix(m1, ncol=3)
? data.frame
mtcars
str(mtcars)
df1 <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3, 515.2, 611.0, 729.0, 843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2021-11-15", "2014-05-11", "2015-03-27"))
)
str(df1)
mtcars[1, 2]
mtcars["Mazda RX4", "cyl"]
mtcars$hp
class(mtcars$hp)
mtcars[,"hp"]
mtcars[,4]
hp <- mtcars$hp
class(hp)
length(hp)
carsub <- mtcars[,2:4]
head(carsub)  # the function head displays the first six rows of the table
carsub <- mtcars[,c(3,7,11)]
head(carsub)
mtcars[ ,c("disp", "qsec","carb")]
mtcars[1:2, ]
mtcars[c(1,3,10), ]
mtcars[c(1,3,10), c(2, 4:5) ]
subset(mtcars, hp < 90)
#order the cars using the column mpg (ascending order)
mtcars[order(mtcars$mpg),]
#sort the cars using two keys
mtcars[order(mtcars$mpg, -mtcars$cyl),]
mtcars[order(mpg),]
summary(carsub)
library(tibble)
tibble(
x = 1:5,
y = 1,    # this will be automatically transformed into a vector with length 5
z = x^2 + y,  # it will recognize x and y that were just created
t = letters[1:5]   # strings will not be converted into factors
)
tibble(
x = 1:5,
t = letters[1:3]
)
ans <- tibble(
x = 1:50,
t = letters[1:50],
x2 = x^2,
e = sample(letters, 50, replace = TRUE)
)
ans
df <- data.frame(
thex = runif(5),
they = rnorm(5)
)
df$x # Extract by name
df$thex
df[["x"]]
df[[1]] # Extract by position
df <- tibble(
thex = runif(5),
they = rnorm(5)
)
df$x # Extract by name
df[["x"]]
df[[1]] # Extract by position
Name <- c("Alex", "Moses", "Stephan", "Zakhele", "Leane", "Lucas", "Nobhule")
Age <- c(25, 31, 23, 52, 76, 49, 26)
Height <- c(177, 163, 190, 179, 163, 183, 164)
Weight <- c(57, 69, 83, 75, 70, 83, 53)
Sex <- as.factor(c("F", "F", "M", "M", "F", "M", "F"))
Age
Height
Weight
Sex
df <- data.frame (row.names = Name, Age, Height, Weight, Sex)
df
Name <- c("Alex", "Moses", "Stephan", "Zakhele", "Leane", "Lucas", "Nobhule")
Age <- c(25, 31, 23, 52, 76, 49, 26)
Height <- c(177, 163, 190, 179, 163, 183, 164)
Weight <- c(57, 69, 83, 75, 70, 83, 53)
Sex <- as.factor(c("F", "F", "M", "M", "F", "M", "F"))
Age
Height
Weight
Sex
df <- data.frame (row.names = Name, Age, Height, Weight, Sex)
df
sub <- subset(mtcars[, c("disp", "drat", "hp")], hp >= 120 & hp <=200)
sub2 <- sub[order(-sub$hp),]
sub2
row.names(mtcars)
col.names(mtcars)
colnames(mtcars)
rownames(mtcars)
rownames()
?rownames()
